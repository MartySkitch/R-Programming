q()
X <- 1
print(x)
print(X)
X
msg <- "Hello World"
msg
msg[3]
msg(3)
x <- 1:20
x
x[12]
clear
x <- vector(numeric, 10)
help.start()
x -> list(1, "a", T, 1 + 4i)
x -> list(1, "a", True, 1 + 4i)
x -> list(1, "a", TRUE, 1 + 4i)
x <- list(1, "a", TRUE, 1 + 4i)
x
x <- factor("Yes", "No", "Maybe")
x
x <- factor("Yes", "No")
x
x <- factor(c("Yes", "No", "Maybe"))
x
x <- c("a", "b", "c")
x
names(x)
names(x) <- c("A", "B", "C")
x
x["B"]
}
f <- function(a, b)
{
a^2
}
f(2)
f(2,3)
f <- function(a, b)
{
print(a)
print(b)
}
f(2,3)
f(2)
f <- function(a, b = 69)
{
print(a)
print(b)
}
f(2)
args(paste)
args(ncol)
search()
x^2 + y/z
}
f <- function(x, y)
{
x^2 + y/z
}
f <- function(x, y)
{
x^2 + y/z
}
f(2,3)
z<-69
f(2,69)
make.power <- function(n) {
pow <- function(x){
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(7)
square(69)
}
make.NegLogLik <- function(data, fixed=c(FALSE,FALSE)) {
params <- fixed
function(p) {
params[!fixed] <- p
mu <- params[1]
sigma <- params[2]
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((data-mu)^2) / (sigma^2)
-(a + b)
}
}
> set.seed(1); normals <- rnorm(100, 1, 2)
set.seed(1); normals <- rnorm(100, 1, 2)
nLL <- make.NegLogLik(normals)
nll
nLL
ls(environment(nLL))
optim(c(mu=0, sigma=1,nLL))$params
optim(c(mu=0, sigma=1),nLL)$params
optim(c(mu = 0, sigma = 1), nLL)$par
optim(c(mu = 0, sigma = 1), nLL)$params
optim(c(mu = 0, sigma = 1), nLL)$par
optim(c(mu = 0, sigma = 1), nLL)$para
optim(c(mu = 0, sigma = 1), nLL)$pa
optim(c(mu = 0, sigma = 1), nLL)$params
optim(c(mu = 0, sigma = 1), nLL)$p
nLL <- make.NegLogLik(normals, c(FALSE, 2))
optimize(nLL, c(-1,3))$minimum
optimize
nLL <- make.NegLogLik(normals, c(1, FALSE))
x <- seq(1.7, 1.9, len = 100)
y <- sapply(x, nLL)
plot(x, exp(-(y - min(y))), type = "l")
nLL <- make.NegLogLik(normals, c(FALSE, 2))
x <- seq(0.5, 1.5, len = 100)
y <- sapply(x, nLL)
plot(x, exp(-(y - min(y))), type = "l")
make.NegLogLik <- function(data, fixed=c(FALSE,FALSE)) {
params <- fixed
function(p) {
params[!fixed] <- p
mu <- params[1]
sigma <- params[2]
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((data-mu)^2) / (sigma^2)
-(a + b)
}
}
mean(x)
myFun <- function() {
myFun <- function() {
x <- rnorm(1000)
mean(x)
}
myFun <- function() {
x <- rnorm(1000)
mean(x)
}
myFun()
myFun()
myFun()
clear
clear()
x <- 69
print(x)
msg<-"Hello World"
print(msg)
msg
x
x<-1:20
x
x[-3]
x[-3:-7]
Inf
Nan
NaN
y<-c(1.7, T)
y
y<-c(1.7, T, "69")
y
as.numeric(y)
y<-c(T, 2, 3)
as.numeric(y)
x<-list(1, c(T,f))
x<-list(1, c(T,F))
x
m<-maxtrix(2,3)
m<-matrix(2,3)
m
mattrix
matrix()
m<-matrix(1:9, nrow=2, ncol=3)
m<-matrix(1:6, nrow=2, ncol=3)
m
dim(m)<-c(1,6)
m
dim(m)<-c(3,3)
dim(m)<-c(3,2)
m
dim(m)<-c(2,3)
m
dim(m)<-c(6,1)
m
x<-factor(c("Yes", "Yes", "No", "Yes", "No"))
x
table(x)
attributes(x)
pwd
dir
dir()
pwd()
read.table()
read.table
help(read.table)
x<-url(www.google.com)
x<-url("www.google.com")
con<-url("http://www.google.com")
x<-realline(con)
x<-readline(con)
x
x<-readline(con, r)
con<-url("http://www.google.com", "r")
x<-readlines(con)
x<-readlines(con)
x<-readLines(con)
con<-url("http://www.google.com", "r")
x<-readLines(con)
head(x)
dir()
pwd()
load("D:/Skitch/Code/R/Quiz 1/.RData")
ls()
Oz
install.packages("KernSmooth")
library(KernSmooth)
library(swril)
library(swirl)
swirl()
getwd()
ls()
x<-9
ls()
list.files()
help(list.files)
?list.files
ls() -r
list.files(recursive=TRUE)
args(list.files)
old.dir<=getwd()
old.dir<-getwd()
mkdir("testdir")
md("testdir")
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename()
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
dir.create("testdir2\testdir3" recursive=TRUE)
dir.create("testdir2/testdir3" recursive=TRUE)
dir.create("testdir2/testdir3", recursive=TRUE)
dir.remove("testdir2")
unlink("testdir2")
unlink("testdir2, recursive=TRUE")
unlink("testdir2", recursive=TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
source('D:/Skitch/Code/R/R-Programming/Assignment 2/cachemean.R')
source('D:/Skitch/Code/R/R-Programming/Assignment 2/makeVector.R')
x<-c(12, 13, 23, 67, 34, 23, 0)
?append
append(x, c(34, 21, 69))
length(x)
x<-append(x, c(34, 21, 69))
makeVector(x)
cachemean(x)
x<-1:10000
vec<-makeVector(x)
vec$getmean()
mx<-mean(x)
vec$setmean(mx)
vec$getmean()
cachemean(x)
source('D:/Skitch/Code/R/R-Programming/Assignment 2/makeVector.R')
source('D:/Skitch/Code/R/R-Programming/Assignment 2/cachemean.R')
x<-1:5000
makeVector(x)
cachemean(x)
source('D:/Skitch/Code/R/R-Programming/Assignment 2/makeVector.R')
source('D:/Skitch/Code/R/R-Programming/Assignment 2/makeVector.R')
vec<-makeVecto(x)
vec<-makeVector(x)
cachemean(vec)
source('D:/Skitch/Code/R/R-Programming/Assignment 2/makeVector.R')
apply(iris[, 1:4], 2, mean)
iris
sapply(split(Sepal.Length, virginica), mean)
sapply(split(iris$Sepal.Length, virginica), mean)
library(datasets)
data(iris)
sapply(split(iris$Sepal.Length, virginica), mean)
sapply(split(iris$Sepal.Length, "virginica"), mean)
sapply(split(iris$Sepal.Length, iris$Species), mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
hp<-sapply(split(mtcars$hp, mtcars$cyl), mean)
hp
hp[3]-hp[1]
source('D:/temp/ch2.R', echo=TRUE)
y<-rnorm(100)
x<-rnorm(100)
plot(x,y)
plot(y,x)
x<-rnorm(100, mean=50, sd=0.1)
x<-rnorm(100, mean=50, sd=0.2)
plot(y,x)
plot(x,y)
x<-1:100
plot(x,y)
y<-rnorm(100, mean=50, sd=0.1)
plot(x,y)
x<-1:100
y<-100 + x^2
plot(x,y)
x=c(2, 4, 5)
x
y=hist(100)
y=norm(100)
hist(y)
y
y=runif(100)
hist(y)
y=gauss(100)
y=rnorm(100)
hist(y)
y=qnorm(100)
y=pbeta(100)
x<-rnorm(100,mean=50, sd=10)
hist(x)
x<-rnorm(100,mean=50, sd=1)
hist(x)
x<-rnorm(1000,mean=50, sd=1)
hist(x)
x<-rnorm(1000,mean=50, sd=.1)
hist(x)
x<-rnorm(1000,mean=50, sd=30)
hist(x)
x=runif(50)
y=rnorm(50)
plot(x,y)
hist(y)
hist(x)
hist(x)
x=rnorm(500)
hist(x)
x=gnorm(500)
x=1:100
y=dnorm(100,mean=10, sd=2)
plot(x,y)
y
y=dnorm(x,mean=10, sd=2)
plot(x,y)
y=dnorm(x,mean=45, sd=20)
plot(x,y)
y=dnorm(x,mean=45, sd=20, log=TRUE)
plot(x,y)
y=dnorm(x,mean=45, sd=13)
plot(x,y)
y=dnorm(x,mean=45, sd=1)
plot(x,y)
y=dnorm(x,mean=45, sd=0.1)
plot(x,y)
y=dnorm(x,mean=45, sd=10)
plot(x,y)
y=pnorm(x,mean=45, sd=10)
plot(x,y)
y=pnorm(x,mean=45, sd=10, lower.tail=FALSE)
plot(x,y)
y=pnorm(x,mean=45, sd=10, lower.tail=FALSE, log.p=TRUE)
plot(x,y)
y=qnorm(x,mean=45, sd=10)
plot(x,y)
y=qnorm(x,mean=45, sd=1)
y=qnorm(x,mean=0, sd=1)
setwd("D:/Skitch/Code/R/R-Programming/Assignment 3")
state<-"TX"
Hospital.30.Day<-11
Hospital.30.Day<-"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
outcome.data<-read.csv("outcome-of-care-measures.csv", colClasses="character")
Hospital.30.Day[1]
outcome.data[,Hospital.30.Day[1]]
outcome.data[,Hospital.30.Day
]
cols.wanted<- c("Hospital.Name", Hospital.30.Day)
cols.wanted
outcome.data.state <- subset(outcome.data, State==toupper(state), select = cols.wanted)
head outcome.data.state
head(outcome.data.state)
names(outcome.data.state)
outcome.data.state[,2]
class(outcome.data.state)
sapply(outcome.data.state, class)
View(outcome.data.state)
outcome.data.state <- subset(outcome.data, State==toupper(state) and outcome.data[,11] != "Not Available", select = c(2, Hospital.30.Day))
outcome.data.state <- subset(outcome.data, State==toupper(state) & outcome.data[,11] != "Not Available", select = c(2, Hospital.30.Day))
outcome.data[,11]
outcome.data.state <- subset(outcome.data, State==toupper(state) & outcome.data[,11] != "Not Available", select = c(2, Hospital.30.Day))
Hospital.30.Day = 11
outcome.data.state <- subset(outcome.data, State==toupper(state) & outcome.data[,11] != "Not Available", select = c(2, Hospital.30.Day))
outcome.data.state
outcome.data.state[order[2,1]]
outcome.data.state[order(2,1)
]
outcome.data.state[order(c(2,1))]
head(outcome.data.state)
head(outcome.data.state[order(c(2,1))])
head(outcome.data.state[order(outcome.data.state[,2], outcome.data.state[,1]) )
head(outcome.data.state[order(outcome.data.state[,2], outcome.data.state[,1]) ])
head(outcome.data.state[order(outcome.data.state[,2], outcome.data.state[,1]), ])
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
outcome.data.state <- subset(outcome.data, State==toupper(state) and outcome.data[,11] != "Not Available", select = c(2, Hospital.30.Day))
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("TX", "heart attack")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
best("TX", "heart attack")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
best("TX", "heart attack")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
best("TX", "heart failure")
best("TX", "heart attack")
Hospital.30.Day <- 17 ##"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
outcome.data<-read.csv("outcome-of-care-measures.csv", colClasses="character")
state<-"tx"
outcome.data.state <- subset(outcome.data, State==toupper(state) & outcome.data[,Hospital.30.Day] != "Not Available", select = c(2, Hospital.30.Day))
names(outcome.data.state)
head(outcome.data.state)
outcome.data.state[order(outcome.data.state[,2]), outcome.data.state[,1),]]
outcome.data.state[order(outcome.data.state[,2]), outcome.data.state[,1]),]
outcome.data.state[order(outcome.data.state[,2], outcome.data.state[,1]),]
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/best.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart attack")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart attack")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart attack")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart attack")
rankhospital("TX", "heart failure")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MN", "heart attack", 5000)
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
rankhospital("MN", "heart attack", 5000)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit)
submit()
submit()
submit()
outcome.data<-read.csv("outcome-of-care-measures.csv", colClasses="character")
names(outcome.data)
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankall.R')
rankall(heart attack", "worst")
rankall("heart attack", "worst")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankall.R')
rankall("heart attack", "worst")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankall.R')
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankhospital.R')
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankall.R')
setwd("D:/Skitch/Code/R/R-Programming/Assignment 3")
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankall.R')
rankall(heart attack", 1)
rankall("heart attack", 1)
outcome.data<-read.csv("outcome-of-care-measures.csv", colClasses="character")
outcome<-"heart attack"
outcome.data.all <- subset(outcome.data, outcome.data[,Hospital.30.Day] != "Not Available", select = c(2, 7, Hospital.30.Day))
Hospital.30.Day <- 11 ##"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
outcome.data.all <- subset(outcome.data, outcome.data[,Hospital.30.Day] != "Not Available", select = c(2, 7, Hospital.30.Day))
names(outcome.data.all)
names(outcome.data.all)[1]
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankall.R')
rankall("heart attack", 1)
source('D:/Skitch/Code/R/R-Programming/Assignment 3/rankall.R')
rankall("heart attack", 1)
