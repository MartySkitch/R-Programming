q()
X <- 1
print(x)
print(X)
X
msg <- "Hello World"
msg
msg[3]
msg(3)
x <- 1:20
x
x[12]
clear
x <- vector(numeric, 10)
help.start()
x -> list(1, "a", T, 1 + 4i)
x -> list(1, "a", True, 1 + 4i)
x -> list(1, "a", TRUE, 1 + 4i)
x <- list(1, "a", TRUE, 1 + 4i)
x
x <- factor("Yes", "No", "Maybe")
x
x <- factor("Yes", "No")
x
x <- factor(c("Yes", "No", "Maybe"))
x
x <- c("a", "b", "c")
x
names(x)
names(x) <- c("A", "B", "C")
x
x["B"]
}
f <- function(a, b)
{
a^2
}
f(2)
f(2,3)
f <- function(a, b)
{
print(a)
print(b)
}
f(2,3)
f(2)
f <- function(a, b = 69)
{
print(a)
print(b)
}
f(2)
args(paste)
args(ncol)
search()
x^2 + y/z
}
f <- function(x, y)
{
x^2 + y/z
}
f <- function(x, y)
{
x^2 + y/z
}
f(2,3)
z<-69
f(2,69)
make.power <- function(n) {
pow <- function(x){
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(7)
square(69)
}
make.NegLogLik <- function(data, fixed=c(FALSE,FALSE)) {
params <- fixed
function(p) {
params[!fixed] <- p
mu <- params[1]
sigma <- params[2]
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((data-mu)^2) / (sigma^2)
-(a + b)
}
}
> set.seed(1); normals <- rnorm(100, 1, 2)
set.seed(1); normals <- rnorm(100, 1, 2)
nLL <- make.NegLogLik(normals)
nll
nLL
ls(environment(nLL))
optim(c(mu=0, sigma=1,nLL))$params
optim(c(mu=0, sigma=1),nLL)$params
optim(c(mu = 0, sigma = 1), nLL)$par
optim(c(mu = 0, sigma = 1), nLL)$params
optim(c(mu = 0, sigma = 1), nLL)$par
optim(c(mu = 0, sigma = 1), nLL)$para
optim(c(mu = 0, sigma = 1), nLL)$pa
optim(c(mu = 0, sigma = 1), nLL)$params
optim(c(mu = 0, sigma = 1), nLL)$p
nLL <- make.NegLogLik(normals, c(FALSE, 2))
optimize(nLL, c(-1,3))$minimum
optimize
nLL <- make.NegLogLik(normals, c(1, FALSE))
x <- seq(1.7, 1.9, len = 100)
y <- sapply(x, nLL)
plot(x, exp(-(y - min(y))), type = "l")
nLL <- make.NegLogLik(normals, c(FALSE, 2))
x <- seq(0.5, 1.5, len = 100)
y <- sapply(x, nLL)
plot(x, exp(-(y - min(y))), type = "l")
make.NegLogLik <- function(data, fixed=c(FALSE,FALSE)) {
params <- fixed
function(p) {
params[!fixed] <- p
mu <- params[1]
sigma <- params[2]
a <- -0.5*length(data)*log(2*pi*sigma^2)
b <- -0.5*sum((data-mu)^2) / (sigma^2)
-(a + b)
}
}
mean(x)
myFun <- function() {
myFun <- function() {
x <- rnorm(1000)
mean(x)
}
myFun <- function() {
x <- rnorm(1000)
mean(x)
}
myFun()
myFun()
myFun()
clear
clear()
x <- 69
print(x)
msg<-"Hello World"
print(msg)
msg
x
x<-1:20
x
x[-3]
x[-3:-7]
Inf
Nan
NaN
y<-c(1.7, T)
y
y<-c(1.7, T, "69")
y
as.numeric(y)
y<-c(T, 2, 3)
as.numeric(y)
x<-list(1, c(T,f))
x<-list(1, c(T,F))
x
m<-maxtrix(2,3)
m<-matrix(2,3)
m
mattrix
matrix()
m<-matrix(1:9, nrow=2, ncol=3)
m<-matrix(1:6, nrow=2, ncol=3)
m
dim(m)<-c(1,6)
m
dim(m)<-c(3,3)
dim(m)<-c(3,2)
m
dim(m)<-c(2,3)
m
dim(m)<-c(6,1)
m
x<-factor(c("Yes", "Yes", "No", "Yes", "No"))
x
table(x)
attributes(x)
pwd
dir
dir()
pwd()
read.table()
read.table
help(read.table)
x<-url(www.google.com)
x<-url("www.google.com")
con<-url("http://www.google.com")
x<-realline(con)
x<-readline(con)
x
x<-readline(con, r)
con<-url("http://www.google.com", "r")
x<-readlines(con)
x<-readlines(con)
x<-readLines(con)
con<-url("http://www.google.com", "r")
x<-readLines(con)
head(x)
dir()
pwd()
load("D:/Skitch/Code/R/Quiz 1/.RData")
ls()
Oz
install.packages("KernSmooth")
library(KernSmooth)
library(swril)
library(swirl)
swirl()
getwd()
ls()
x<-9
ls()
list.files()
help(list.files)
?list.files
ls() -r
list.files(recursive=TRUE)
args(list.files)
old.dir<=getwd()
old.dir<-getwd()
mkdir("testdir")
md("testdir")
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename()
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
dir.create("testdir2\testdir3" recursive=TRUE)
dir.create("testdir2/testdir3" recursive=TRUE)
dir.create("testdir2/testdir3", recursive=TRUE)
dir.remove("testdir2")
unlink("testdir2")
unlink("testdir2, recursive=TRUE")
unlink("testdir2", recursive=TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
add2 <- function(x, y){
x + y
}
add3(3,5)
add2(3,6)
above <- function(x, n){
use <- x > n
x[use]
}
x<-1:20
above(x,10)
above10 <- function(x, n=10){
use <- x > 10
x[use]
}
above(10)
above <- function(x, n=10){
use <- x > 10
x[use]
}
above(10)
above <- function(x, n=10){
use <- x > 10
x[use]
}
above(10)
above <- function(x, n=10){
use <- x > n
x[use]
}
above(10)
above10(x)
above <- function(x, n = 10){
use <- x > n
x[use]
}
above(x)
above(x,12)
search()
Bday
<-"1958-12-05"
Bday<-"1958-12-05"
weekday(Bday)
Bday
?Weekday
?date
cube<-function(x,n){
x^3
}
cube(3)
n
x<-1:10
if(x>5){
x<-0
}
x<-1:10
if(x>5){
x<-0
}
x<-1:10
if(x>5){
x<-0
}
f<-function(x){
g<-function(y){
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
x<-5
y<-if(x<3){
NA
} else {
10
}
x
y
f<-function(x){
g<-function(y){
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
getwd()
setwd("D:/Skitch/Code/R/R-Programming/Assignment 1")
path<-"specdata"
dir(path, pattern = '\\.csv', full.names = TRUE)
tables <- lapply(files, read.csv)
?dir
paste("specdata", 1:10, sep=".csv")
id<-70:73
paste("specdata", "/", sprintf("%03d",id), ".csv",sep"")
paste("specdata", "/", sprintf("%03d", id), ".csv", sep="")
paste(sprintf("%03d", id), ".csv", sep="")
getwd()
source('D:/Skitch/Code/R/R-Programming/Assignment 1/pollutantmean.R')
pollutantmean("specdata", "sdsd", 1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
pollutantmean
pollutantmean("specdata", "sdsd", 1)
source('~/.active-rstudio-document')
pollutantmean("specdata", "sdsd", 1)
getwd()
cd..
setwd("D:/Skitch/Code/R/R-Programming/Assignment 1")
source('~/.active-rstudio-document')
pollutantmean("specdata", "blah", 1)
datalist
source('~/.active-rstudio-document')
pollutantmean("specdata", "blah", 1)
pollutantmean("specdata", "blah", 1:2)
?do.call
?rbind
directory<-"specdata"
id<-1:2
fileList<-paste(directory, "/", sprintf("%03d", id), ".csv", sep="")
dataList<-lapply(fileList, read.csv)
?dataList
class(dataList)
dataList[1]
dataList[2]
id<-1:3
fileList<-paste(directory, "/", sprintf("%03d", id), ".csv", sep="")
dataList<-lapply(fileList, read.csv)
totalData<-do.call("rbind", dataList)
head(totalData)
nrows(totalData)
nrow(totalData)
?mean
id<-1
fileList<-paste(directory, "/", sprintf("%03d", id), ".csv", sep="")
dataList<-lapply(fileList, read.csv)
totalData<-do.call("rbind", dataList)
head(totalData)
mean(totalData[,"sulfate"], na.rm=TRUE)
source('D:/Skitch/Code/R/R-Programming/Assignment 1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "nitrate", 1)
pollutantmean("specdata", "nitrate", 1:2)
pollutantmean("specdata", "sulfate", 1:2)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("submitscript1.R")
submit()
2
submit()
submit()
submit()
